# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Generated by Django 4.1.10 on 2023-07-26 19:37

import django.db.models.deletion
from django.db import migrations, models

import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):
    dependencies = [
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
        ("wagtailcore", "0083_workflowcontenttype"),
        ("microsite", "0054_faqpage_alter_protocoltestpage_body"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="micrositesettings",
            options={"verbose_name": "Site settings"},
        ),
        migrations.AddField(
            model_name="blogindexpage",
            name="menu_description",
            field=models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
        ),
        migrations.AddField(
            model_name="blogindexpage",
            name="menu_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Icon to accompany an entry in the navigation menu. Optional.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
            ),
        ),
        migrations.AddField(
            model_name="blogpage",
            name="menu_description",
            field=models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
        ),
        migrations.AddField(
            model_name="blogpage",
            name="menu_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Icon to accompany an entry in the navigation menu. Optional.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
            ),
        ),
        migrations.AddField(
            model_name="faqpage",
            name="menu_description",
            field=models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
        ),
        migrations.AddField(
            model_name="faqpage",
            name="menu_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Icon to accompany an entry in the navigation menu. Optional.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
            ),
        ),
        migrations.AddField(
            model_name="generalpurposepage",
            name="menu_description",
            field=models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
        ),
        migrations.AddField(
            model_name="generalpurposepage",
            name="menu_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Icon to accompany an entry in the navigation menu. Optional.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
            ),
        ),
        migrations.AddField(
            model_name="micrositesettings",
            name="navigation_cta_button_label",
            field=models.CharField(blank=True, max_length=100, verbose_name="CTA button label"),
        ),
        migrations.AddField(
            model_name="micrositesettings",
            name="navigation_cta_button_url",
            field=models.CharField(blank=True, max_length=500, verbose_name="CTA button URL"),
        ),
        migrations.AddField(
            model_name="micrositesettings",
            name="navigation_enabled",
            field=models.BooleanField(default=True, verbose_name="Show nav bar on site?"),
        ),
        migrations.AddField(
            model_name="micrositesettings",
            name="navigation_generate_nav_from_page_tree",
            field=models.BooleanField(
                default=True, help_text="Note that this will only go two levels deep", verbose_name="Automatically generate nav from page heirarchy?"
            ),
        ),
        migrations.AddField(
            model_name="micrositesettings",
            name="navigation_show_cta_button",
            field=models.BooleanField(
                default=False,
                help_text="HIDDEN ON MOBILE VIEWPORT. Button requires label and URL, below, to be set. ",
                verbose_name="Show CTA button in top nav?",
            ),
        ),
        migrations.AddField(
            model_name="protocoltestpage",
            name="menu_description",
            field=models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
        ),
        migrations.AddField(
            model_name="protocoltestpage",
            name="menu_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Icon to accompany an entry in the navigation menu. Optional.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
            ),
        ),
        migrations.AlterField(
            model_name="faqpage",
            name="content",
            field=wagtail.fields.StreamField(
                [
                    (
                        "details",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "preamble",
                                    wagtail.blocks.RichTextBlock(
                                        features=["bold", "italic", "strikethrough", "link", "ol", "ul"],
                                        help_text="Optional rich-text to go before the section. Not standard Protocol",
                                        required=False,
                                    ),
                                ),
                                (
                                    "details",
                                    wagtail.blocks.ListBlock(
                                        wagtail.blocks.StructBlock(
                                            [
                                                (
                                                    "heading",
                                                    wagtail.blocks.CharBlock(
                                                        help_text="Up to 75 characters. Will be the H3 of the page it's used in",
                                                        max_length=75,
                                                        required=True,
                                                    ),
                                                ),
                                                (
                                                    "body",
                                                    wagtail.blocks.RichTextBlock(features=["bold", "italic", "strikethrough", "link", "ol", "ul"]),
                                                ),
                                            ]
                                        ),
                                        collapsed=False,
                                        help_text="Each Details Block will be rendered as an expandable section",
                                    ),
                                ),
                            ],
                            help_text="<a href='https://protocol.mozilla.org/components/detail/details-component--default.html'>Protocol docs for details</a>.",
                            label_format="Expandable details: {preamble}",
                            required=False,
                        ),
                    )
                ],
                blank=True,
                use_json_field=True,
            ),
        ),
        migrations.CreateModel(
            name="StructuralPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "page_layout",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mzp-l-content mzp-t-content-sm", "Small"),
                            ("mzp-l-content mzp-t-content-md", "Medium"),
                            ("mzp-l-content mzp-t-content-lg", "Large"),
                            ("mzp-l-content mzp-t-content-xl", "Extra Large"),
                        ],
                        default="mzp-l-content mzp-t-content-lg",
                        help_text="Optional layout wrapper <i>â€“ only for components that need one</i>. <a href='https://protocol.mozilla.org/components/detail/content-container--default.html'>Protocol docs for layout</a>.",
                        max_length=64,
                    ),
                ),
                (
                    "menu_description",
                    models.CharField(blank=True, help_text="Text to accompany an entry in the navigation menu. Optional.", max_length=200),
                ),
                (
                    "menu_icon",
                    models.ForeignKey(
                        blank=True,
                        help_text="Icon to accompany an entry in the navigation menu. Optional.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
